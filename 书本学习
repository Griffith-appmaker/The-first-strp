name='griffith'
print(name,"\nhello,it\'s nice to meet you".upper())
print(name.upper())
print(name.lower())
print(name.title())
name2='jessica  '
print(name2)
name2=name2.rstrip()
print(name2)
name3=' tony '
print('\t',name3.title(),"\n\tnice to meet you again my friend".title())
print('\t',name3.lstrip().title(),"\n\tnice to meet you again my friend".title())    
print('\t',name3.title(),"\n\t nice to meet you again my friend".title())

在上述文本中练习了书本第一张的 大小写，换行，删除空格等功能
明确了：使用 \t+变量的时候，\t要用引号括起，且后面要加逗号
引用变量不需要用引号括起来，变量后面要加括号
不同的方法可以叠加使用（line12）

问题：用逗号链接不同的代码块会造成空格，用+替代line11~13中'\t'后面的逗号即可解决这个问题

num1=8
num2=9
sum=num1+num2
print('the sum of',str(num1),'and',str(num2),'is',str(sum)) 

了解了不同字符串类型的基本转换及方法——转化加函数，并且不需要引号，但是前面需要逗号（带有一个字符的空格）/加号


a='griffith'
b='meijia'
family1=[a,b]
family2=['griffith','meijia']
print('family list:',family1)
print('family list:',family2)
message='my lover is '+family2[1].title()+'.'
print(message)

了解了列表的格式（【xxx】），如何引用以及后续加函数的方法

family=['griffith','meijia']
print(family)
family.append('yaya')
print(family)
family.insert(3,'jeoge')
print(family)
kid1=family.pop()
print(kid1)
kid2=family.pop()
print(kid2)
kids=[kid1,kid2]
print(family)
print(kids)

了解了关于列表的添加，删除的操作
drinks=['coke','juice','wine','beer']
print(drinks)
print(sorted(drinks))
print(sorted(drinks,reverse=True))
print(sorted(drinks,reverse=False))
print(drinks)
drinks.reverse()
print(drinks)
drinks.reverse()
print(drinks).reverse

reverse函数的使用是直接使用的，放到一个print模块里面去的话，需要写出reverse=True这类表述

for value in range(1,21):
    print(value)
numbers=list(range(1,21))
print(numbers)
squares=[g*g for g in range(2,101,2)]
print(squares)

使用列表解析会快很多；for value in range(xxx)是一个循环，所以下面的print需要做好缩进，并且上面的for xxx需要有冒号

users=['griffith','jay','ray','tommy','jessica']
if users:
    for user in users:
        if user=='griffith':
            print('hello',user,'welcome home.')
        else:
            print('hello',user,'welcome to griffith\'home')
else:
    print('There\' no user here')
#尝试列表为空，看看是否会报错
users2=[]
if users2:
    for user2 in users2:
        if user2=='griffith':
            print('hello',user2,'welcome home.')
        else:
            print('hello',user2,'welcome to griffith\'home')
else:
    print('\nThere\' no user here')
    
上述函数中用if判断一个函数是否为空，如果是空的，会返回false，然后跳到else那里

users=['griffith','ray','jay','jessica','tommy']
users_new=['Griffith','Admin','Meimei','Tommy','Robot']
for user in users_new:
    if user.lower() in users:
        print(user,' has been used,please pick uo a new one.')
    else:
        print(user,' can be used,welcome to Game Of Throne')
模拟——现实中用户注册的姓名与已有姓名是否一致的情况



